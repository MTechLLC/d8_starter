machine:
    timezone:
        America/Los_Angeles
    php:
        version:
            7.0.4
    environment:
        DATABASE_URL: mysql://ubuntu:@127.0.0.1:3306/circle_test
        VENDOR_TAR: "vendor.tar"

## Customize checkout
checkout:
    post:
        # Disable sendmail for local PHP for install.
        - echo sendmail_path=`which true` >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/sendmail_disable.ini

        # Additional logging for Apache & PHP.
        - echo "error_log = /var/log/apache2/vhost_php_error.log" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/error_log.ini

## Customize dependencies
dependencies:
    pre:
        # Run composer install and cache it.
        - if [[ ! -d ~/vendor-cache ]]; then mkdir ~/vendor-cache; fi
        - if [[ -f ~/vendor-cache/${VENDOR_TAR} ]]; then mkdir vendor; tar -xf ~/vendor-cache/${VENDOR_TAR} -C ./vendor; fi
        - if [[ -d ./vendor/ ]]; then echo "Size of vendor directory extracted from cache:"; du -hs ./vendor/; else echo "Vendor directory does not exist"; fi
        - composer --verbose --prefer-dist install
        - if [[ -f ~/vendor-cache/${VENDOR_TAR} ]]; then echo "Deleting previous cache archive"; rm -fv ~/vendor-cache/$VENDOR_TAR; echo "Done"; else echo "No cache archive to delete"; fi
        - echo "Creating cache archive"; tar -cf ~/vendor-cache/$VENDOR_TAR ./vendor/; echo "Done"
        - echo "Size of cache archive:"; ls -lh ~/vendor-cache/$VENDOR_TAR

        # Provide db connection string for Drupal installation.
        - printf "<?php\n\$databases['default']['default'] = ['database' => 'circle_test', 'username' => 'ubuntu', 'password' => '', 'prefix' => '', 'host' => 'localhost', 'port' => '3306', 'namespace' => 'Drupal\\Core\\Database\\Driver\\mysql', 'driver' => 'mysql'];" > ./web/sites/default/settings.local.php

        # Install Drupal.
        - ../vendor/bin/drush site-install config_installer -y --verbose --db-url=${DATABASE_URL} --db-su='ubuntu' --db-su-pw='':
            pwd: web

        # Configure PhantomJS
        - mkdir -p /tmp/pjsdrivercache/phantomjs

    post:
        # Configure apache vhost.
        - cp ./web/build/circleci/apache-vhost.conf /etc/apache2/sites-available
        - sudo a2ensite apache-vhost
        - sudo service apache2 restart

    # Cache composer.
    cache_directories:
        - "~/.composer/cache"
        - "~/vendor-cache/"

test:
    override:
        # Run phpunit tests.
        - $(phpenv which php) web/core/scripts/run-tests.sh --php $(phpenv which php) --sqlite ~/travis.sqlite PHPUnit

        # Run PhantomJS
        - nohup phantomjs --ssl-protocol=any --ignore-ssl-errors=true ~/vendor/jcalderonzumba/gastonjs/src/Client/main.js 8510 1024 768 2>&1 > /tmp/gastonjs.log &

        # Run Behat tests.
        - test/vendor/bin/behat --version
        - test/vendor/bin/behat

## Customize deployment commands
#deployment:
    #development:
        #branch: master
            #commands:
                #- git push %git repo% ${CIRCLE_SHA1}:master
